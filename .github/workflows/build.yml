name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: false
    
    - name: Install PC/SC dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcsclite-dev pcscd pcsc-tools
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Build test (current platform)
      run: |
        CGO_ENABLED=1 go build -v ./cmd/cfs-spool
        CGO_ENABLED=1 go build -v ./cmd/web-server

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: false
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcsclite-dev pcscd pcsc-tools
    
    - name: Build for Linux AMD64
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 1
      run: |
        go build -ldflags "-s -w -X main.version=${{ github.ref_name }}" \
          -o cfs-spool-cli-linux-amd64 ./cmd/cfs-spool
        go build -ldflags "-s -w -X main.version=${{ github.ref_name }}" \
          -o cfs-spool-web-linux-amd64 ./cmd/web-server
    
    - name: Create Linux package
      run: |
        mkdir -p release/cfs-spool-linux-amd64
        cp cfs-spool-*-linux-amd64 release/cfs-spool-linux-amd64/
        cp -r web release/cfs-spool-linux-amd64/
        cp README.md release/cfs-spool-linux-amd64/
        
        # Create install script
        cat > release/cfs-spool-linux-amd64/install.sh << 'EOF'
        #!/bin/bash
        echo "Installing CFS Spool..."
        echo "1. Install PC/SC: sudo apt-get install pcscd pcsc-tools libpcsclite1"
        echo "2. Connect your RFID reader"
        echo "3. Run: ./cfs-spool-web-linux-amd64"
        echo "4. Open: http://localhost:8080"
        echo "CLI usage: ./cfs-spool-cli-linux-amd64 read-tag"
        EOF
        chmod +x release/cfs-spool-linux-amd64/install.sh
        chmod +x release/cfs-spool-linux-amd64/cfs-spool-*
        
        # Create archive
        cd release
        tar -czf ../cfs-spool-linux-amd64.tar.gz cfs-spool-linux-amd64/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cfs-spool-linux-amd64
        path: cfs-spool-linux-amd64.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: cfs-spool-linux-amd64
        path: .
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ðŸŽ‰ CFS Spool ${{ github.ref_name }}
          
          ### ðŸ“¦ Downloads
          
          - **Linux 64-bit**: `cfs-spool-linux-amd64.tar.gz`
          
          ### ðŸš€ Quick Start
          
          1. Download and extract the package
          2. Install PC/SC: `sudo apt-get install pcscd pcsc-tools libpcsclite1`
          3. Connect your ACR122U RFID reader
          4. Run: `./cfs-spool-web-linux-amd64`
          5. Open: http://localhost:8080
          
          ### ðŸ†˜ Support
          
          - Issues: https://github.com/robertocorreajr/cfs_spool/issues
          - Documentation: https://github.com/robertocorreajr/cfs_spool#readme
        files: |
          cfs-spool-linux-amd64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
